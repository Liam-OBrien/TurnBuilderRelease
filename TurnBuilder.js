// Generated by Haxe 4.0.5
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var Engine = function(display,network,mouseInput) {
	var f = 0;
	while(true) break;
	while(true) break;
	this.angle = f;
	this.display = display;
	this.network = network;
	mouseInput.onClick = $bind(this,this.onClick);
	this.root = new displayObject_RootDisplayObject();
	this.camera = new displayObject_Camera(16,9,this.root);
	this.camera.set_position(geom__$Vector3D_Vector3D_$Impl_$._new(0,1,5));
	new gameState_CoreGame(this.root,this.camera);
	this.previousTime = Date.now() / 1000;
	this.ticker = new haxe_Timer(17);
	this.ticker.run = $bind(this,this.tick);
};
Engine.__name__ = true;
Engine.prototype = {
	tick: function() {
		try {
			var currentTime = Date.now() / 1000;
			var delta = currentTime - this.previousTime;
			this.previousTime = currentTime;
			this.root.update(delta);
			this.display.beginRender(this.camera.get_worldToViewMatrix());
			this.root.render(this.display);
		} catch( e ) {
			console.log("src/Engine.hx:64:",((e) instanceof js__$Boot_HaxeError) ? e.val : e);
		}
	}
	,onClick: function(ev) {
		var matrix = this.camera.get_viewToWorldMatrix();
		var line0 = geom__$Matrix3D_Matrix3D_$Impl_$.multiplyVector(matrix,ev.position);
		var line1 = geom__$Matrix3D_Matrix3D_$Impl_$.multiplyVector(matrix,geom__$Vector3D_Vector3D_$Impl_$._new(ev.position.x,ev.position.y,1));
		var target = this.getClosestClickTarget(this.root,line0,line1);
		if(target != null) {
			target.displayObject.click();
		}
	}
	,getClosestClickTarget: function(displayObject,line0,line1) {
		var currentClosest = null;
		if(displayObject.isClickable) {
			if(displayObject.hitbox == null) {
				var e = Type.typeof(displayObject);
				throw new js__$Boot_HaxeError("Unable to click an item with no hitbox:" + $hxEnums[e.__enum__].__constructs__[e._hx_index]);
			}
			var worldToLocal = displayObject.get_globalMatrix().getInverse();
			var localLine0 = geom__$Matrix3D_Matrix3D_$Impl_$.multiplyVector(worldToLocal,line0);
			var localLine1 = geom__$Matrix3D_Matrix3D_$Impl_$.multiplyVector(worldToLocal,line1);
			var diff = geom__$Vector3D_Vector3D_$Impl_$.subtractVector(localLine1,localLine0);
			var depth = -localLine0.z / diff.z;
			if(depth >= 0 && depth <= 1) {
				var xGradient = diff.x / diff.z;
				var yGradient = diff.y / diff.z;
				var intercept = geom__$Vector3D_Vector3D_$Impl_$._new(localLine0.x - localLine0.z * xGradient,localLine0.y - localLine0.z * yGradient,0);
				if(displayObject.hitbox.contains(intercept)) {
					currentClosest = { displayObject : displayObject, depth : depth};
				}
			}
		}
		var _g_head = displayObject.children.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var child = val;
			var closestChild = this.getClosestClickTarget(child,line0,line1);
			if(closestChild != null && (currentClosest == null || closestChild.depth <= currentClosest.depth)) {
				currentClosest = closestChild;
			}
		}
		return currentClosest;
	}
	,__class__: Engine
};
var Main = function() { };
Main.__name__ = true;
Main.main = function() {
	var display = new platform_display_Display();
	var mouseInput = new platform_input_MouseInput(display);
	var network = new platform_network_Network();
	var startGame = function() {
		var engine = new Engine(display,network,mouseInput);
	};
	network.init(startGame);
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	if(x != null) {
		var _g = 0;
		var _g1 = x.length;
		while(_g < _g1) {
			var i = _g++;
			var c = x.charCodeAt(i);
			if(c <= 8 || c >= 14 && c != 32 && c != 45) {
				var v = parseInt(x, (x[(i + 1)]=="x" || x[(i + 1)]=="X") ? 16 : 10);
				if(isNaN(v)) {
					return null;
				} else {
					return v;
				}
			}
		}
	}
	return null;
};
var ValueType = $hxEnums["ValueType"] = { __ename__ : true, __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"]
	,TNull: {_hx_index:0,__enum__:"ValueType",toString:$estr}
	,TInt: {_hx_index:1,__enum__:"ValueType",toString:$estr}
	,TFloat: {_hx_index:2,__enum__:"ValueType",toString:$estr}
	,TBool: {_hx_index:3,__enum__:"ValueType",toString:$estr}
	,TObject: {_hx_index:4,__enum__:"ValueType",toString:$estr}
	,TFunction: {_hx_index:5,__enum__:"ValueType",toString:$estr}
	,TClass: ($_=function(c) { return {_hx_index:6,c:c,__enum__:"ValueType",toString:$estr}; },$_.__params__ = ["c"],$_)
	,TEnum: ($_=function(e) { return {_hx_index:7,e:e,__enum__:"ValueType",toString:$estr}; },$_.__params__ = ["e"],$_)
	,TUnknown: {_hx_index:8,__enum__:"ValueType",toString:$estr}
};
var Type = function() { };
Type.__name__ = true;
Type.typeof = function(v) {
	switch(typeof(v)) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum($hxEnums[e]);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
var attribute_Attribute = function() {
};
attribute_Attribute.__name__ = true;
attribute_Attribute.prototype = {
	__class__: attribute_Attribute
};
var attribute__$AttributeHolder_AttributeHolder_$Impl_$ = {};
attribute__$AttributeHolder_AttributeHolder_$Impl_$.__name__ = true;
attribute__$AttributeHolder_AttributeHolder_$Impl_$._new = function() {
	var this1 = new haxe_ds_StringMap();
	return this1;
};
var displayObject_DisplayObject = function(parent) {
	this.scale = geom__$Vector3D_Vector3D_$Impl_$._new(1,1,1);
	var tmp = geom__$Vector3D_Vector3D_$Impl_$._new(1,0,0);
	var f = 0;
	while(true) break;
	while(true) break;
	this.rotation = geom__$Quaternion_Quaternion_$Impl_$._new(tmp,f);
	this.position = geom__$Vector3D_Vector3D_$Impl_$._new(0,0,0);
	this.children = new haxe_ds_List();
	if(parent != null) {
		parent.addChild(this);
	}
};
displayObject_DisplayObject.__name__ = true;
displayObject_DisplayObject.prototype = {
	set_parent: function(value) {
		this.globalMatrix = null;
		return this.parent = value;
	}
	,get_localMatrix: function() {
		if(this.localMatrix == null) {
			this.localMatrix = geom__$Matrix3D_Matrix3D_$Impl_$.createTransformation(this.position,this.rotation,this.scale);
		}
		return this.localMatrix;
	}
	,get_globalMatrix: function() {
		this.globalMatrix = this.parent == null ? this.get_localMatrix() : geom__$Matrix3D_Matrix3D_$Impl_$.multiplyByMatrix(this.parent.get_globalMatrix(),this.get_localMatrix());
		return this.globalMatrix;
	}
	,set_position: function(value) {
		this.localMatrix = null;
		this.globalMatrix = null;
		return this.position = value;
	}
	,set_rotation: function(value) {
		this.localMatrix = null;
		this.globalMatrix = null;
		return this.rotation = value;
	}
	,set_scale: function(value) {
		this.localMatrix = null;
		this.globalMatrix = null;
		return this.scale = value;
	}
	,addChild: function(child) {
		this.children.push(child);
		child.set_parent(this);
	}
	,update: function(delta) {
		this.updateSelf(delta);
		var _g_head = this.children.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var child = val;
			child.update(delta);
		}
	}
	,updateSelf: function(delta) {
	}
	,click: function() {
	}
	,render: function(display) {
		this.renderSelf(display);
		var _g_head = this.children.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var child = val;
			child.render(display);
		}
	}
	,renderSelf: function(display) {
	}
	,__class__: displayObject_DisplayObject
};
var displayObject_Camera = function(screenWidth,screenHeight,parent) {
	this.farZ = 1000;
	this.nearZ = 0.1;
	displayObject_DisplayObject.call(this,parent);
	this.aspectRatio = screenWidth / screenHeight;
};
displayObject_Camera.__name__ = true;
displayObject_Camera.__super__ = displayObject_DisplayObject;
displayObject_Camera.prototype = $extend(displayObject_DisplayObject.prototype,{
	get_perspectiveMatrix: function() {
		if(this.perspectiveMatrix == null) {
			var range = this.nearZ - this.farZ;
			this.perspectiveMatrix = geom__$Matrix3D_Matrix3D_$Impl_$._new(1,0,0,0,0,this.aspectRatio,0,0,0,0,(this.nearZ + this.farZ) / range,-1,0,0,2 * this.nearZ * this.farZ / range,0);
		}
		return this.perspectiveMatrix;
	}
	,get_worldToViewMatrix: function() {
		return geom__$Matrix3D_Matrix3D_$Impl_$.multiplyByMatrix(this.get_globalMatrix().getInverse(),this.get_perspectiveMatrix());
	}
	,get_viewToWorldMatrix: function() {
		return this.get_worldToViewMatrix().getInverse();
	}
	,__class__: displayObject_Camera
});
var displayObject_RootDisplayObject = function() {
	displayObject_DisplayObject.call(this,null);
};
displayObject_RootDisplayObject.__name__ = true;
displayObject_RootDisplayObject.__super__ = displayObject_DisplayObject;
displayObject_RootDisplayObject.prototype = $extend(displayObject_DisplayObject.prototype,{
	renderSelf: function(display) {
	}
	,__class__: displayObject_RootDisplayObject
});
var gameState_GameState = function(parent,camera) {
	displayObject_DisplayObject.call(this,parent);
	this.camera = camera;
};
gameState_GameState.__name__ = true;
gameState_GameState.__super__ = displayObject_DisplayObject;
gameState_GameState.prototype = $extend(displayObject_DisplayObject.prototype,{
	__class__: gameState_GameState
});
var gameState_CoreGame = function(root,camera) {
	this.tileTypes = [];
	gameState_GameState.call(this,root,camera);
	this.tileTypes.push(new tile_TileType(0,0));
	this.tileTypes.push(new tile_TileType(1,255));
	this.tileTypes.push(new tile_TileType(2,16711680));
	this.tileTypes.push(new tile_TileType(3,16776960));
	var layout = [[1,1,1],[1,0,1],[1,1,1]];
	this.board = new tile_Board(layout,40,this);
};
gameState_CoreGame.__name__ = true;
gameState_CoreGame.__super__ = gameState_GameState;
gameState_CoreGame.prototype = $extend(gameState_GameState.prototype,{
	updateSelf: function(delta) {
	}
	,__class__: gameState_CoreGame
});
var geom__$Angle_Angle_$Impl_$ = {};
geom__$Angle_Angle_$Impl_$.__name__ = true;
geom__$Angle_Angle_$Impl_$._new = function(f) {
	var this1 = f;
	return this1;
};
geom__$Angle_Angle_$Impl_$.__unboundConstruct = function(f) {
	var this1 = f;
	return this1;
};
geom__$Angle_Angle_$Impl_$.fromFloat = function(f) {
	var f1 = f;
	while(f1 >= 6.2831853071795862) f1 -= 6.2831853071795862;
	while(f1 < 0) f1 += 6.2831853071795862;
	var this1 = f1;
	return this1;
};
geom__$Angle_Angle_$Impl_$.fromAngle = function(a) {
	var this1 = a;
	return this1;
};
geom__$Angle_Angle_$Impl_$.addFloat = function(this1,rhs) {
	var f = js_Boot.__cast(this1 , Float) + rhs;
	while(f >= 6.2831853071795862) f -= 6.2831853071795862;
	while(f < 0) f += 6.2831853071795862;
	var this2 = f;
	return this2;
};
geom__$Angle_Angle_$Impl_$.addToFloat = function(lhs,rhs) {
	var f = lhs + js_Boot.__cast(rhs , Float);
	while(f >= 6.2831853071795862) f -= 6.2831853071795862;
	while(f < 0) f += 6.2831853071795862;
	var this1 = f;
	return this1;
};
geom__$Angle_Angle_$Impl_$.subtractFloat = function(this1,rhs) {
	var f = js_Boot.__cast(this1 , Float) - rhs;
	while(f >= 6.2831853071795862) f -= 6.2831853071795862;
	while(f < 0) f += 6.2831853071795862;
	var this2 = f;
	return this2;
};
geom__$Angle_Angle_$Impl_$.subtractFromFloat = function(lhs,rhs) {
	var f = lhs - js_Boot.__cast(rhs , Float);
	while(f >= 6.2831853071795862) f -= 6.2831853071795862;
	while(f < 0) f += 6.2831853071795862;
	var this1 = f;
	return this1;
};
geom__$Angle_Angle_$Impl_$.multiplyByFloat = function(this1,rhs) {
	var f = js_Boot.__cast(this1 , Float) * rhs;
	while(f >= 6.2831853071795862) f -= 6.2831853071795862;
	while(f < 0) f += 6.2831853071795862;
	var this2 = f;
	return this2;
};
geom__$Angle_Angle_$Impl_$.multiplyFloat = function(lhs,rhs) {
	var f = js_Boot.__cast(rhs , Float) * lhs;
	while(f >= 6.2831853071795862) f -= 6.2831853071795862;
	while(f < 0) f += 6.2831853071795862;
	var this1 = f;
	return this1;
};
geom__$Angle_Angle_$Impl_$.divideByFloat = function(this1,rhs) {
	var f = js_Boot.__cast(this1 , Float) / rhs;
	while(f >= 6.2831853071795862) f -= 6.2831853071795862;
	while(f < 0) f += 6.2831853071795862;
	var this2 = f;
	return this2;
};
geom__$Angle_Angle_$Impl_$.bound = function(f) {
	var f1 = f;
	while(f1 >= 6.2831853071795862) f1 -= 6.2831853071795862;
	while(f1 < 0) f1 += 6.2831853071795862;
	var this1 = f1;
	return this1;
};
geom__$Angle_Angle_$Impl_$.boundTo = function(f,limit) {
	while(f >= limit) f -= limit;
	while(f < 0) f += limit;
	return f;
};
var geom_Matrix3DImpl = function(m0,m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,m11,m12,m13,m14,m15) {
	var this1 = new Array(16);
	this.data = this1;
	this.get_data()[0] = m0;
	this.get_data()[1] = m1;
	this.get_data()[2] = m2;
	this.get_data()[3] = m3;
	this.get_data()[4] = m4;
	this.get_data()[5] = m5;
	this.get_data()[6] = m6;
	this.get_data()[7] = m7;
	this.get_data()[8] = m8;
	this.get_data()[9] = m9;
	this.get_data()[10] = m10;
	this.get_data()[11] = m11;
	this.get_data()[12] = m12;
	this.get_data()[13] = m13;
	this.get_data()[14] = m14;
	this.get_data()[15] = m15;
};
geom_Matrix3DImpl.__name__ = true;
geom_Matrix3DImpl.prototype = {
	get_data: function() {
		return this.data;
	}
	,get_isTransformationMatrix: function() {
		if(this.get_data()[3] == 0 && this.get_data()[7] == 0 && this.get_data()[11] == 0) {
			return this.get_data()[15] == 1;
		} else {
			return false;
		}
	}
	,getInverse: function() {
		if(this.get_isTransformationMatrix()) {
			var test1 = this.getInverseOfTransformationMatrix();
			var test2 = this.getInverseOf4x4Matrix();
			if(geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test1,0) != geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test2,0)) {
				console.log("src/geom/Matrix3D.hx:152:","Are these different?: " + geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test1,0) + " , " + geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test2,0) + " ");
			}
			if(geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test1,1) != geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test2,1)) {
				console.log("src/geom/Matrix3D.hx:152:","Are these different?: " + geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test1,1) + " , " + geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test2,1) + " ");
			}
			if(geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test1,2) != geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test2,2)) {
				console.log("src/geom/Matrix3D.hx:152:","Are these different?: " + geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test1,2) + " , " + geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test2,2) + " ");
			}
			if(geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test1,3) != geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test2,3)) {
				console.log("src/geom/Matrix3D.hx:152:","Are these different?: " + geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test1,3) + " , " + geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test2,3) + " ");
			}
			if(geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test1,4) != geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test2,4)) {
				console.log("src/geom/Matrix3D.hx:152:","Are these different?: " + geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test1,4) + " , " + geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test2,4) + " ");
			}
			if(geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test1,5) != geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test2,5)) {
				console.log("src/geom/Matrix3D.hx:152:","Are these different?: " + geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test1,5) + " , " + geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test2,5) + " ");
			}
			if(geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test1,6) != geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test2,6)) {
				console.log("src/geom/Matrix3D.hx:152:","Are these different?: " + geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test1,6) + " , " + geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test2,6) + " ");
			}
			if(geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test1,7) != geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test2,7)) {
				console.log("src/geom/Matrix3D.hx:152:","Are these different?: " + geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test1,7) + " , " + geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test2,7) + " ");
			}
			if(geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test1,8) != geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test2,8)) {
				console.log("src/geom/Matrix3D.hx:152:","Are these different?: " + geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test1,8) + " , " + geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test2,8) + " ");
			}
			if(geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test1,9) != geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test2,9)) {
				console.log("src/geom/Matrix3D.hx:152:","Are these different?: " + geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test1,9) + " , " + geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test2,9) + " ");
			}
			if(geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test1,10) != geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test2,10)) {
				console.log("src/geom/Matrix3D.hx:152:","Are these different?: " + geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test1,10) + " , " + geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test2,10) + " ");
			}
			if(geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test1,11) != geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test2,11)) {
				console.log("src/geom/Matrix3D.hx:152:","Are these different?: " + geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test1,11) + " , " + geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test2,11) + " ");
			}
			if(geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test1,12) != geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test2,12)) {
				console.log("src/geom/Matrix3D.hx:152:","Are these different?: " + geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test1,12) + " , " + geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test2,12) + " ");
			}
			if(geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test1,13) != geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test2,13)) {
				console.log("src/geom/Matrix3D.hx:152:","Are these different?: " + geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test1,13) + " , " + geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test2,13) + " ");
			}
			if(geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test1,14) != geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test2,14)) {
				console.log("src/geom/Matrix3D.hx:152:","Are these different?: " + geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test1,14) + " , " + geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(test2,14) + " ");
			}
		}
		if(this.get_isTransformationMatrix()) {
			return this.getInverseOfTransformationMatrix();
		} else {
			return this.getInverseOf4x4Matrix();
		}
	}
	,getDeterminantOfTransformationMatrix: function() {
		return this.get_data()[0] * (this.get_data()[5] * this.get_data()[10] - this.get_data()[6] * this.get_data()[9]) + this.get_data()[4] * (this.get_data()[9] * this.get_data()[2] - this.get_data()[1] * this.get_data()[10]) + this.get_data()[8] * (this.get_data()[1] * this.get_data()[6] - this.get_data()[5] * this.get_data()[2]);
	}
	,getInverseOfTransformationMatrix: function() {
		var a0106 = this.get_data()[1] * this.get_data()[6] - this.get_data()[2] * this.get_data()[5];
		var a0209 = this.get_data()[2] * this.get_data()[9] - this.get_data()[1] * this.get_data()[10];
		var a0510 = this.get_data()[5] * this.get_data()[10] - this.get_data()[6] * this.get_data()[9];
		var determinant = this.get_data()[0] * a0510 + this.get_data()[4] * a0209 + this.get_data()[8] * a0106;
		var multiplier = 1 / determinant;
		var a0005 = this.get_data()[0] * this.get_data()[5] - this.get_data()[1] * this.get_data()[4];
		var a0108 = this.get_data()[1] * this.get_data()[8] - this.get_data()[0] * this.get_data()[9];
		var a0409 = this.get_data()[4] * this.get_data()[9] - this.get_data()[5] * this.get_data()[8];
		var a0013 = this.get_data()[0] * this.get_data()[13] - this.get_data()[1] * this.get_data()[12];
		var a0413 = this.get_data()[4] * this.get_data()[13] - this.get_data()[5] * this.get_data()[12];
		var a0813 = this.get_data()[8] * this.get_data()[13] - this.get_data()[9] * this.get_data()[12];
		return geom__$Matrix3D_Matrix3D_$Impl_$._new(multiplier * a0510,multiplier * a0209,multiplier * (this.get_data()[1] * this.get_data()[6] - this.get_data()[2] * this.get_data()[5]),0,multiplier * (this.get_data()[6] * this.get_data()[8] - this.get_data()[4] * this.get_data()[10]),multiplier * (this.get_data()[0] * this.get_data()[10] - this.get_data()[2] * this.get_data()[8]),multiplier * (this.get_data()[2] * this.get_data()[4] - this.get_data()[0] * this.get_data()[6]),0,multiplier * a0409,multiplier * a0108,multiplier * a0005,0,multiplier * (this.get_data()[10] * a0413 - this.get_data()[6] * a0813 - this.get_data()[14] * a0409),multiplier * (this.get_data()[2] * a0813 - this.get_data()[10] * a0013 - this.get_data()[14] * a0108),multiplier * (this.get_data()[6] * a0013 - this.get_data()[2] * a0413 - this.get_data()[14] * a0005),multiplier);
	}
	,getInverseOf4x4Matrix: function() {
		var a0207 = this.get_data()[2] * this.get_data()[7] - this.get_data()[3] * this.get_data()[6];
		var a0211 = this.get_data()[2] * this.get_data()[11] - this.get_data()[3] * this.get_data()[10];
		var a0215 = this.get_data()[2] * this.get_data()[15] - this.get_data()[3] * this.get_data()[14];
		var a0611 = this.get_data()[6] * this.get_data()[11] - this.get_data()[7] * this.get_data()[10];
		var a0615 = this.get_data()[6] * this.get_data()[15] - this.get_data()[7] * this.get_data()[14];
		var a1015 = this.get_data()[10] * this.get_data()[15] - this.get_data()[11] * this.get_data()[14];
		var d0 = this.get_data()[5] * a1015 - this.get_data()[9] * a0615 + this.get_data()[13] * a0611;
		var d1 = this.get_data()[9] * a0215 - this.get_data()[1] * a1015 - this.get_data()[13] * a0211;
		var d2 = this.get_data()[1] * a0615 - this.get_data()[5] * a0215 + this.get_data()[13] * a0207;
		var d3 = this.get_data()[5] * a0211 - this.get_data()[1] * a0611 - this.get_data()[9] * a0207;
		var determinant = this.get_data()[0] * d0 + this.get_data()[4] * d1 + this.get_data()[8] * d2 + this.get_data()[12] * d3;
		var multiplier = 1 / determinant;
		var a0106 = this.get_data()[1] * this.get_data()[6] - this.get_data()[2] * this.get_data()[5];
		var a0107 = this.get_data()[1] * this.get_data()[7] - this.get_data()[3] * this.get_data()[5];
		var a0110 = this.get_data()[1] * this.get_data()[10] - this.get_data()[2] * this.get_data()[9];
		var a0111 = this.get_data()[1] * this.get_data()[11] - this.get_data()[3] * this.get_data()[9];
		var a0114 = this.get_data()[1] * this.get_data()[14] - this.get_data()[2] * this.get_data()[13];
		var a0115 = this.get_data()[1] * this.get_data()[15] - this.get_data()[3] * this.get_data()[13];
		var a0510 = this.get_data()[5] * this.get_data()[10] - this.get_data()[6] * this.get_data()[9];
		var a0511 = this.get_data()[5] * this.get_data()[11] - this.get_data()[7] * this.get_data()[9];
		var a0514 = this.get_data()[5] * this.get_data()[14] - this.get_data()[6] * this.get_data()[13];
		var a0515 = this.get_data()[5] * this.get_data()[15] - this.get_data()[7] * this.get_data()[13];
		var a0914 = this.get_data()[9] * this.get_data()[14] - this.get_data()[10] * this.get_data()[13];
		var a0915 = this.get_data()[9] * this.get_data()[15] - this.get_data()[11] * this.get_data()[13];
		return geom__$Matrix3D_Matrix3D_$Impl_$._new(multiplier * d0,multiplier * d1,multiplier * d2,multiplier * d3,multiplier * (this.get_data()[8] * a0615 - this.get_data()[4] * a1015 - this.get_data()[12] * a0611),multiplier * (this.get_data()[0] * a1015 - this.get_data()[8] * a0215 + this.get_data()[12] * a0211),multiplier * (this.get_data()[4] * a0215 - this.get_data()[0] * a0615 - this.get_data()[12] * a0207),multiplier * (this.get_data()[0] * a0611 - this.get_data()[4] * a0211 + this.get_data()[8] * a0207),multiplier * (this.get_data()[4] * a0915 - this.get_data()[8] * a0515 + this.get_data()[12] * a0511),multiplier * (this.get_data()[8] * a0115 - this.get_data()[0] * a0915 - this.get_data()[12] * a0111),multiplier * (this.get_data()[0] * a0515 - this.get_data()[4] * a0115 + this.get_data()[12] * a0107),multiplier * (this.get_data()[4] * a0111 - this.get_data()[0] * a0511 - this.get_data()[8] * a0107),multiplier * (this.get_data()[8] * a0514 - this.get_data()[4] * a0914 - this.get_data()[12] * a0510),multiplier * (this.get_data()[0] * a0914 - this.get_data()[8] * a0114 + this.get_data()[12] * a0110),multiplier * (this.get_data()[4] * a0114 - this.get_data()[0] * a0514 - this.get_data()[12] * a0106),multiplier * (this.get_data()[0] * a0510 - this.get_data()[4] * a0110 + this.get_data()[8] * a0106));
	}
	,__class__: geom_Matrix3DImpl
};
var geom__$Matrix3D_Matrix3D_$Impl_$ = {};
geom__$Matrix3D_Matrix3D_$Impl_$.__name__ = true;
geom__$Matrix3D_Matrix3D_$Impl_$._new = function(m0,m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,m11,m12,m13,m14,m15) {
	var this1;
	return new geom_Matrix3DImpl(m0,m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,m11,m12,m13,m14,m15);
};
geom__$Matrix3D_Matrix3D_$Impl_$.createTransformation = function(position,rotation,scale) {
	var twoAxisSquared = geom__$Vector3D_Vector3D_$Impl_$.multiplyByFloat(geom__$Vector3D_Vector3D_$Impl_$.multiplyByVector(rotation.axis,rotation.axis),2);
	var twoScalarAxis = geom__$Vector3D_Vector3D_$Impl_$.multiplyByFloat(rotation.axis,rotation.scalar * 2);
	var twoXY = 2 * rotation.axis.x * rotation.axis.y;
	var twoXZ = 2 * rotation.axis.x * rotation.axis.z;
	var twoYZ = 2 * rotation.axis.y * rotation.axis.z;
	return geom__$Matrix3D_Matrix3D_$Impl_$._new((1 - twoAxisSquared.y - twoAxisSquared.z) * scale.x,twoXY + twoScalarAxis.z,twoXZ - twoScalarAxis.y,0,twoXY - twoScalarAxis.z,(1 - twoAxisSquared.x - twoAxisSquared.z) * scale.y,twoYZ + twoScalarAxis.x,0,twoXZ + twoScalarAxis.y,twoYZ - twoScalarAxis.x,(1 - twoAxisSquared.x - twoAxisSquared.y) * scale.z,0,position.x,position.y,position.z,1);
};
geom__$Matrix3D_Matrix3D_$Impl_$.multiplyByMatrix = function(this1,rhs) {
	return new geom_Matrix3DImpl(this1.get_data()[0] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,0) + this1.get_data()[1] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,4) + this1.get_data()[2] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,8) + this1.get_data()[3] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,12),this1.get_data()[0] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,1) + this1.get_data()[1] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,5) + this1.get_data()[2] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,9) + this1.get_data()[3] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,13),this1.get_data()[0] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,2) + this1.get_data()[1] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,6) + this1.get_data()[2] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,10) + this1.get_data()[3] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,14),this1.get_data()[0] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,3) + this1.get_data()[1] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,7) + this1.get_data()[2] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,11) + this1.get_data()[3] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,15),this1.get_data()[4] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,0) + this1.get_data()[5] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,4) + this1.get_data()[6] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,8) + this1.get_data()[7] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,12),this1.get_data()[4] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,1) + this1.get_data()[5] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,5) + this1.get_data()[6] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,9) + this1.get_data()[7] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,13),this1.get_data()[4] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,2) + this1.get_data()[5] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,6) + this1.get_data()[6] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,10) + this1.get_data()[7] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,14),this1.get_data()[4] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,3) + this1.get_data()[5] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,7) + this1.get_data()[6] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,11) + this1.get_data()[7] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,15),this1.get_data()[8] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,0) + this1.get_data()[9] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,4) + this1.get_data()[10] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,8) + this1.get_data()[11] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,12),this1.get_data()[8] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,1) + this1.get_data()[9] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,5) + this1.get_data()[10] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,9) + this1.get_data()[11] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,13),this1.get_data()[8] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,2) + this1.get_data()[9] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,6) + this1.get_data()[10] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,10) + this1.get_data()[11] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,14),this1.get_data()[8] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,3) + this1.get_data()[9] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,7) + this1.get_data()[10] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,11) + this1.get_data()[11] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,15),this1.get_data()[12] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,0) + this1.get_data()[13] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,4) + this1.get_data()[14] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,8) + this1.get_data()[15] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,12),this1.get_data()[12] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,1) + this1.get_data()[13] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,5) + this1.get_data()[14] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,9) + this1.get_data()[15] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,13),this1.get_data()[12] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,2) + this1.get_data()[13] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,6) + this1.get_data()[14] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,10) + this1.get_data()[15] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,14),this1.get_data()[12] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,3) + this1.get_data()[13] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,7) + this1.get_data()[14] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,11) + this1.get_data()[15] * geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead(rhs,15));
};
geom__$Matrix3D_Matrix3D_$Impl_$.arrayRead = function(this1,n) {
	return this1.get_data()[n];
};
geom__$Matrix3D_Matrix3D_$Impl_$.multiplyVector = function(this1,rhs) {
	var wFactor = 1 / (this1.get_data()[3] * rhs.x + this1.get_data()[7] * rhs.y + this1.get_data()[11] * rhs.z + this1.get_data()[15]);
	return geom__$Vector3D_Vector3D_$Impl_$._new((this1.get_data()[0] * rhs.x + this1.get_data()[4] * rhs.y + this1.get_data()[8] * rhs.z + this1.get_data()[12]) * wFactor,(this1.get_data()[1] * rhs.x + this1.get_data()[5] * rhs.y + this1.get_data()[9] * rhs.z + this1.get_data()[13]) * wFactor,(this1.get_data()[2] * rhs.x + this1.get_data()[6] * rhs.y + this1.get_data()[10] * rhs.z + this1.get_data()[14]) * wFactor);
};
var geom__$Quaternion_Quaternion_$Impl_$ = {};
geom__$Quaternion_Quaternion_$Impl_$.__name__ = true;
geom__$Quaternion_Quaternion_$Impl_$._new = function(axis,angle) {
	var this1;
	return new geom_QuaternionImpl(axis,angle);
};
var geom_QuaternionImpl = function(axis,angle) {
	var f = js_Boot.__cast(angle , Float) / 2;
	while(f >= 6.2831853071795862) f -= 6.2831853071795862;
	while(f < 0) f += 6.2831853071795862;
	var this1 = f;
	var halfAngle = this1;
	this.scalar = Math.cos(halfAngle);
	this.axis = geom__$Vector3D_Vector3D_$Impl_$.multiplyByFloat(axis,Math.sin(halfAngle));
};
geom_QuaternionImpl.__name__ = true;
geom_QuaternionImpl.prototype = {
	__class__: geom_QuaternionImpl
};
var geom__$Vector3D_Vector3D_$Impl_$ = {};
geom__$Vector3D_Vector3D_$Impl_$.__name__ = true;
geom__$Vector3D_Vector3D_$Impl_$._new = function(x,y,z) {
	var this1;
	return new geom_Vector3DImpl(x,y,z);
};
geom__$Vector3D_Vector3D_$Impl_$.addVector = function(this1,rhs) {
	return geom__$Vector3D_Vector3D_$Impl_$._new(this1.x + rhs.x,this1.y + rhs.y,this1.z + rhs.z);
};
geom__$Vector3D_Vector3D_$Impl_$.subtractVector = function(this1,rhs) {
	return geom__$Vector3D_Vector3D_$Impl_$._new(this1.x - rhs.x,this1.y - rhs.y,this1.z - rhs.z);
};
geom__$Vector3D_Vector3D_$Impl_$.multiplyByVector = function(this1,rhs) {
	return geom__$Vector3D_Vector3D_$Impl_$._new(this1.x * rhs.x,this1.y * rhs.y,this1.z * rhs.z);
};
geom__$Vector3D_Vector3D_$Impl_$.multiplyByFloat = function(this1,rhs) {
	return geom__$Vector3D_Vector3D_$Impl_$._new(this1.x * rhs,this1.y * rhs,this1.z * rhs);
};
geom__$Vector3D_Vector3D_$Impl_$.multiplyFloat = function(lhs,rhs) {
	return geom__$Vector3D_Vector3D_$Impl_$.multiplyByFloat(rhs,lhs);
};
var geom_Vector3DImpl = function(x,y,z) {
	this.x = x;
	this.y = y;
	this.z = z;
};
geom_Vector3DImpl.__name__ = true;
geom_Vector3DImpl.prototype = {
	__class__: geom_Vector3DImpl
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = true;
haxe_IMap.__isInterface__ = true;
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
haxe_Timer.__name__ = true;
haxe_Timer.prototype = {
	run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_ds_List = function() {
	this.length = 0;
};
haxe_ds_List.__name__ = true;
haxe_ds_List.prototype = {
	push: function(item) {
		var x = new haxe_ds__$List_ListNode(item,this.h);
		this.h = x;
		if(this.q == null) {
			this.q = x;
		}
		this.length++;
	}
	,__class__: haxe_ds_List
};
var haxe_ds__$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
haxe_ds__$List_ListNode.__name__ = true;
haxe_ds__$List_ListNode.prototype = {
	__class__: haxe_ds__$List_ListNode
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = true;
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	__class__: haxe_ds_StringMap
};
var hitbox_IHitbox = function() { };
hitbox_IHitbox.__name__ = true;
hitbox_IHitbox.__isInterface__ = true;
hitbox_IHitbox.prototype = {
	__class__: hitbox_IHitbox
};
var hitbox_RectangleHitbox = function() {
};
hitbox_RectangleHitbox.__name__ = true;
hitbox_RectangleHitbox.__interfaces__ = [hitbox_IHitbox];
hitbox_RectangleHitbox.prototype = {
	contains: function(point) {
		if(point.x >= -0.5 && point.x < 0.5 && point.y >= -0.5) {
			return point.y < 0.5;
		} else {
			return false;
		}
	}
	,__class__: hitbox_RectangleHitbox
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.getClass = function(o) {
	if(o == null) {
		return null;
	} else if(((o) instanceof Array)) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s = s + "\t";
				return n + "(" + ((function($this) {
					var $r;
					var _g = [];
					{
						var _g1 = 0;
						var _g2 = con.__params__;
						while(true) {
							if(!(_g1 < _g2.length)) {
								break;
							}
							var p = _g2[_g1];
							_g1 = _g1 + 1;
							_g.push(js_Boot.__string_rec(o[p],s));
						}
					}
					$r = _g;
					return $r;
				}(this))).join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g3 = 0;
			var _g11 = o.length;
			while(_g3 < _g11) {
				var i = _g3++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	if(Object.prototype.hasOwnProperty.call(cc,"__interfaces__")) {
		var intf = cc.__interfaces__;
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = _g++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		return ((o) instanceof Array);
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(js_Boot.__downcastCheck(o,cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ != null ? $hxEnums[o.__enum__] == cl : false;
	}
};
js_Boot.__downcastCheck = function(o,cl) {
	if(!((o) instanceof cl)) {
		if(cl.__isInterface__) {
			return js_Boot.__interfLoop(js_Boot.getClass(o),cl);
		} else {
			return false;
		}
	} else {
		return true;
	}
};
js_Boot.__cast = function(o,t) {
	if(o == null || js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var platform_display_IDisplay = function() { };
platform_display_IDisplay.__name__ = true;
platform_display_IDisplay.__isInterface__ = true;
platform_display_IDisplay.prototype = {
	__class__: platform_display_IDisplay
};
var platform_display_Display = function() {
	this.canvas = window.document.createElement("canvas");
	this.canvas.width = 1600;
	this.canvas.height = 900;
	this.canvas.style.setProperty("position","absolute");
	this.canvas.style.setProperty("left","50%");
	this.canvas.style.setProperty("margin-left",-800 + "px");
	this.canvas.style.setProperty("top","50%");
	this.canvas.style.setProperty("margin-top",-450 + "px");
	this.canvas.style.setProperty("border","2px solid blue");
	window.document.body.appendChild(this.canvas);
	this.context = this.canvas.getContext("webgl2",{ alpha : true, antialias : true, preserveDrawingBuffer : false, depth : true});
	if(this.context == null) {
		window.alert("Browser does not support WebGL2.");
		throw new js__$Boot_HaxeError("Browser does not support WebGL2.");
	}
	this.context.clearColor(1,1,1,1);
	this.context.enable(2929);
	this.rectangleRenderProgram = new platform_display_js_RectangleRenderProgram(this.context);
};
platform_display_Display.__name__ = true;
platform_display_Display.__interfaces__ = [platform_display_IDisplay];
platform_display_Display.prototype = {
	beginRender: function(worldToCamera) {
		this.worldToCamera = worldToCamera;
	}
	,endRender: function() {
	}
	,drawRect: function(localToWorld,fill) {
		this.rectangleRenderProgram.draw(geom__$Matrix3D_Matrix3D_$Impl_$.multiplyByMatrix(localToWorld,this.worldToCamera),fill);
	}
	,__class__: platform_display_Display
};
var platform_display_js_RenderProgram = function(context) {
	this.context = context;
	this.vertexShader = this.buildShader(this.get_vertexShaderSource(),35633);
	this.fragmentShader = this.buildShader(this.get_fragmentShaderSource(),35632);
	this.program = context.createProgram();
	context.attachShader(this.program,this.vertexShader);
	context.attachShader(this.program,this.fragmentShader);
	context.linkProgram(this.program);
};
platform_display_js_RenderProgram.__name__ = true;
platform_display_js_RenderProgram.prototype = {
	get_vertexShaderSource: function() {
		return null;
	}
	,get_fragmentShaderSource: function() {
		return null;
	}
	,buildShader: function(source,type) {
		var shader = this.context.createShader(type);
		this.context.shaderSource(shader,source);
		this.context.compileShader(shader);
		return shader;
	}
	,__class__: platform_display_js_RenderProgram
};
var platform_display_js_RectangleRenderProgram = function(context) {
	platform_display_js_RenderProgram.call(this,context);
	this.vertexArray = context.createVertexArray();
	context.bindVertexArray(this.vertexArray);
	context.useProgram(this.program);
	this.positionLocation = context.getAttribLocation(this.program,"position");
	this.modelToCameraLocation = context.getUniformLocation(this.program,"modelToCamera");
	this.colourLocation = context.getUniformLocation(this.program,"colour");
	var rectangle = new Float32Array([0.5,0.5,0,0.5,-0.5,0,-0.5,0.5,0,-0.5,-0.5,0]);
	context.bindBuffer(34962,context.createBuffer());
	context.bufferData(34962,rectangle,35044);
	context.vertexAttribPointer(this.positionLocation,3,5126,false,0,0);
	context.enableVertexAttribArray(this.positionLocation);
};
platform_display_js_RectangleRenderProgram.__name__ = true;
platform_display_js_RectangleRenderProgram.__super__ = platform_display_js_RenderProgram;
platform_display_js_RectangleRenderProgram.prototype = $extend(platform_display_js_RenderProgram.prototype,{
	get_vertexShaderSource: function() {
		return "#version 300 es\r\n\r\n        in vec3 position;\r\n\r\n        uniform mat4 modelToCamera;\r\n\r\n        out vec3 localPosition;\r\n\r\n        void main()\r\n        {\r\n            gl_Position = modelToCamera * vec4(position, 1);\r\n            localPosition = position;\r\n        }\r\n        ";
	}
	,get_fragmentShaderSource: function() {
		return "#version 300 es\r\n        precision mediump float;\r\n\r\n        in vec3 localPosition;\r\n\r\n        uniform vec4 colour;\r\n\r\n        out vec4 outColor;\r\n        \r\n        void main()\r\n        {\r\n            if (abs(localPosition.x - 0.5) < 0.01 || abs(localPosition.y - 0.5) < 0.02)\r\n            {\r\n                outColor = vec4(0, 0, 0, 1);\r\n            }\r\n            else\r\n            {\r\n                outColor = colour;\r\n            }\r\n        }\r\n        ";
	}
	,draw: function(modelToCamera,colour) {
		var floatify = function(colour1) {
			return (colour1 & 255) / 255.0;
		};
		this.context.bindVertexArray(this.vertexArray);
		this.context.uniformMatrix4fv(this.modelToCameraLocation,false,new Float32Array(modelToCamera.get_data().slice(0)));
		this.context.uniform4fv(this.colourLocation,new Float32Array([floatify(colour >> 16),floatify(colour >> 8),floatify(colour),1]));
		this.context.drawArrays(5,0,4);
	}
	,__class__: platform_display_js_RectangleRenderProgram
});
var platform_input_BaseMouseInput = function() {
};
platform_input_BaseMouseInput.__name__ = true;
platform_input_BaseMouseInput.prototype = {
	__class__: platform_input_BaseMouseInput
};
var platform_input_MouseEvent = function(x,y) {
	this.position = geom__$Vector3D_Vector3D_$Impl_$._new(x,y,0);
};
platform_input_MouseEvent.__name__ = true;
platform_input_MouseEvent.prototype = {
	__class__: platform_input_MouseEvent
};
var platform_input_MouseInput = function(display) {
	var _gthis = this;
	platform_input_BaseMouseInput.call(this);
	display.canvas.onmousedown = function(ev) {
		if(ev.button == 0) {
			var x = ev.offsetX * 2 / display.canvas.width - 1;
			var y = ev.offsetY * 2 / display.canvas.height - 1;
			if(x < -1 || x > 1 || y < -1 || y > 1) {
				console.log("src/platform/input/MouseInput.js.hx:19:","Managed to get weird click coordinates " + x + ", " + y);
			} else {
				_gthis.onClick(new platform_input_MouseEvent(x,-y));
			}
		}
		return;
	};
};
platform_input_MouseInput.__name__ = true;
platform_input_MouseInput.__super__ = platform_input_BaseMouseInput;
platform_input_MouseInput.prototype = $extend(platform_input_BaseMouseInput.prototype,{
	__class__: platform_input_MouseInput
});
var platform_network_INetwork = function() { };
platform_network_INetwork.__name__ = true;
platform_network_INetwork.__isInterface__ = true;
var platform_network_Network = function() {
	this.listeners = [];
	this.channels = [];
	var a = window;
	a.host = $bind(this,this.initHost);
	platform_network_Network.current = this;
};
platform_network_Network.__name__ = true;
platform_network_Network.__interfaces__ = [platform_network_INetwork];
platform_network_Network.prototype = {
	init: function(callback) {
		var key = null;
		while(key == null || key == "") key = window.prompt("Please provide key");
		if(key == "host") {
			this.initHost(callback);
		} else {
			var result = this.decode(key);
			this.join(result.sdp,callback);
		}
	}
	,initHost: function(callback) {
		var _gthis = this;
		var promptHost = function() {
			var key = null;
			while(key == null || key == "") key = window.prompt("Please provide key");
			var result = _gthis.decode(key);
			_gthis.localConnection.setRemoteDescription(result);
			if(callback != null) {
				callback();
			}
		};
		this.host(promptHost);
	}
	,encode: function(description) {
		return JSON.stringify(description);
	}
	,decode: function(input) {
		return JSON.parse(input);
	}
	,host: function(callback) {
		var _gthis = this;
		var configuration = { iceServers : [{ url : "stun:stun.1.google.com:19302"}]};
		this.localConnection = new RTCPeerConnection(configuration);
		this.localConnection.onicecandidate = function(ev) {
			if(ev.candidate != null) {
				var encodedDescription = _gthis.encode(_gthis.localConnection.localDescription);
				console.log("src/platform/network/Network.js.hx:85:",encodedDescription);
				window.navigator.clipboard.writeText(encodedDescription).then(function(ev1) {
					if(callback != null) {
						callback();
					}
					return;
				},function(ev2) {
					if(callback != null) {
						callback();
					}
					return;
				});
			}
			return;
		};
		var channel = this.localConnection.createDataChannel("data");
		channel.addEventListener("open",function(ev3) {
			return _gthis.channels.push(channel);
		});
		channel.onmessage = function(message) {
			_gthis.send(message.data);
			return;
		};
		this.localConnection.createOffer().then(function(offer) {
			return _gthis.localConnection.setLocalDescription(offer);
		});
	}
	,join: function(connectionString,callback) {
		var _gthis = this;
		var configuration = { iceServers : [{ url : "stun:stun.1.google.com:19302"}]};
		var remoteConnection = new RTCPeerConnection(configuration);
		remoteConnection.addEventListener("datachannel",function(ev) {
			_gthis.channels.push(ev.channel);
			ev.channel.onmessage = function(message) {
				_gthis.receive(message.data);
				return;
			};
			if(callback != null) {
				callback();
			}
			return;
		});
		var description = { type : "offer", sdp : connectionString};
		remoteConnection.setRemoteDescription(description).then(function(rdp) {
			return remoteConnection.createAnswer();
		}).then(function(answer) {
			var response = answer.sdp;
			return remoteConnection.setLocalDescription(answer);
		}).then(function(ev1) {
			var encodedDescription = _gthis.encode(remoteConnection.localDescription);
			console.log("src/platform/network/Network.js.hx:126:",encodedDescription);
			return window.navigator.clipboard.writeText(encodedDescription);
		});
	}
	,send: function(message) {
		var _g = 0;
		var _g1 = this.channels;
		while(_g < _g1.length) {
			var channel = _g1[_g];
			++_g;
			channel.send(message);
		}
		if(this.localConnection != null) {
			this.receive(message);
		}
	}
	,receive: function(message) {
		var _g = 0;
		var _g1 = this.listeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(message);
		}
	}
	,listen: function(callback) {
		this.listeners.push(callback);
	}
	,__class__: platform_network_Network
};
var tile_Board = function(tileMap,tileSize,gameState) {
	this.tiles = [];
	displayObject_DisplayObject.call(this,gameState);
	this.gameState = gameState;
	this.length = tileMap.length;
	this.width = tileMap[0].length;
	var centreX = (this.width - 1) / 2;
	var centreZ = (this.length - 1) / 2;
	var _g = 0;
	var _g1 = this.length;
	while(_g < _g1) {
		var z = _g++;
		var _g2 = 0;
		var _g11 = this.width;
		while(_g2 < _g11) {
			var x = _g2++;
			var currentTile = new tile_Tile(gameState.tileTypes[tileMap[z][x]],this);
			currentTile.set_position(geom__$Vector3D_Vector3D_$Impl_$._new(x - centreX,0,z - centreZ));
			currentTile.onClick = (function(tileIndex,f) {
				return function() {
					f[0](tileIndex[0]);
				};
			})([this.tiles.length],[$bind(this,this.onTileClick)]);
			this.tiles.push(currentTile);
		}
	}
	var this1 = 4.71238898038469;
	this.set_rotation(geom__$Quaternion_Quaternion_$Impl_$._new(geom__$Vector3D_Vector3D_$Impl_$._new(1,0,0),this1));
	platform_network_Network.current.listen($bind(this,this.networkCallback));
};
tile_Board.__name__ = true;
tile_Board.__super__ = displayObject_DisplayObject;
tile_Board.prototype = $extend(displayObject_DisplayObject.prototype,{
	onTileClick: function(tileIndex) {
		var tile1 = this.tiles[tileIndex];
		var tileType = tile1.type.id;
		tileType += tileType > 1 ? -2 : 2;
		platform_network_Network.current.send("" + tileIndex + "," + tileType);
	}
	,networkCallback: function(message) {
		var components = message.split(",");
		this.tiles[Std.parseInt(components[0])].type = this.gameState.tileTypes[Std.parseInt(components[1])];
	}
	,__class__: tile_Board
});
var tile_Tile = function(tileType,board) {
	this.attributes = attribute__$AttributeHolder_AttributeHolder_$Impl_$._new();
	displayObject_DisplayObject.call(this,board);
	this.type = tileType;
	this.hitbox = new hitbox_RectangleHitbox();
	this.isClickable = true;
};
tile_Tile.__name__ = true;
tile_Tile.__super__ = displayObject_DisplayObject;
tile_Tile.prototype = $extend(displayObject_DisplayObject.prototype,{
	click: function() {
		this.onClick();
	}
	,renderSelf: function(display) {
		display.drawRect(this.get_globalMatrix(),this.type.colour);
	}
	,__class__: tile_Tile
});
var tile_TileType = function(id,colour) {
	this.id = id;
	this.colour = colour;
};
tile_TileType.__name__ = true;
tile_TileType.prototype = {
	__class__: tile_TileType
};
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
String.prototype.__class__ = String;
String.__name__ = true;
Array.__name__ = true;
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
var __map_reserved = {};
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
js_Boot.__toStr = ({ }).toString;
Engine.TICKRATE = 17;
geom_Matrix3DImpl.WIDTH = 4;
geom_Matrix3DImpl.HEIGHT = 4;
geom__$Matrix3D_Matrix3D_$Impl_$.identity = new geom_Matrix3DImpl(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
platform_display_Display.WIDTH = 1600;
platform_display_Display.HEIGHT = 900;
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

//# sourceMappingURL=TurnBuilder.js.map